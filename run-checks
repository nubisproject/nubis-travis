#!/bin/bash
# shellcheck disable=SC1117
# shellcheck disable=SC2185
set -e

ERRORS=0

# Puppet Checks
if [ -d nubis/puppet ]; then
    echo -e "\033[0;32mRunning Puppet Validate\033[0m"
    puppet parser validate \
        nubis/puppet/*pp \
        || ERRORS=$(( ERRORS + 1 ))

    echo -e "\033[0;32mRunning Puppet Lint\033[0m"
    puppet-lint \
        --no-puppet_url_without_modules-check \
        --no-80chars-check \
        --no-140chars-check \
        --fail-on-warnings nubis/puppet/*pp \
        || ERRORS=$(( ERRORS + 1 ))
fi

# Bash Checks
if git grep -z -P -l '^#!' | xargs -0 -r file 2>/dev/null | grep -q 'shell script' ; then
    echo -e "\033[0;32mRunning ShellCheck\033[0m"
    git grep -z -P -l '^#!' \
        | xargs -0 file \
        | grep 'shell script' \
        | cut -d: -f1 \
        | xargs -r shellcheck \
        || ERRORS=$(( ERRORS + 1 ))
fi

# JSON Checks
if git ls-files | grep -v '\.erb' | grep -q '\.json' ; then
    echo -e "\033[0;32mRunning JSON Lint\033[0m"
    git ls-files \
        | grep '\.json' \
	| grep -v '\.erb' \
        | xargs -r jsonlint \
        || ERRORS=$(( ERRORS + 1 ))
fi

# Markdown Checks
if git ls-files | grep -v CHANGELOG.md | grep -q '\.md$' ; then
    echo -e "\033[0;32mRunning Markdown Lint\033[0m"
    git ls-files \
        | grep '\.md$' \
        | grep -v CHANGELOG.md \
        | xargs -r mdl --style /nubis/mdl_style \
        || ERRORS=$(( ERRORS + 1 ))
fi

# Terraform Checks
if git ls-files | grep -q '\.tf$' ; then
    echo -e "\033[0;32mRunning Terraform Checks\033[0m"
    DIRECTORIES="$(git ls-files | grep '\.tf$' | xargs -r -n1 dirname | sort -u)"
    for DIRECTORY in $DIRECTORIES; do
        terraform validate -check-variables=false "${DIRECTORY}" \
        || ERRORS=$(( ERRORS + 1 ))
        terraform fmt -check=true -diff=true "${DIRECTORY}" \
        || ERRORS=$(( ERRORS + 1 ))
    done
fi

# Travis Checks
if git ls-files | grep -qE '(^|/).travis.yml$'; then
    echo -e "\033[0;32mRunning Travis Lint\033[0m"
    git ls-files \
        | grep -E '(^|/).travis.yml$' \
        | xargs -r travis lint \
        || ERRORS=$(( ERRORS + 1 ))
fi

# Dockerfile Checks
if git ls-files | grep -qE '(^|/)Dockerfile$'; then
    echo -e "\033[0;32mRunning Dockerfile Lint\033[0m"
    git ls-files \
        | grep -E '(^|/)Dockerfile$' \
        | xargs -r /nubis/bin/dockerfilelint/bin/dockerfilelint \
        || ERRORS=$(( ERRORS + 1 ))
fi

# Ruby Checks
if git ls-files | grep -q '\.rb$' ; then
    echo -e "\033[0;32mRunning Ruby Lint\033[0m"
    git ls-files \
        | grep '\.rb$' \
        | xargs -r ruby-lint \
        || echo -e "\033[0;31mWARNING: Ruby linting will be enforced soon. Please fix these issues.\033[0m" #ERRORS=$(( ERRORS + 1 ))
fi

# Exit with status of all checks combined
exit $ERRORS
